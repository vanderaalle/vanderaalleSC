{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red191\green0\blue0;
\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 p = \cf3 Praat\cf2 .new\
p.melFilter = abs(~matrix).flop\
p.jMelFilter\
\
\
p.melFilter[9].size\
\
~matrix[87].size\
~matrix.size\
\
\
(\
~praatArray = [];\
\
\cf3 Routine\cf2  \{ \cf3 arg\cf2  inval;\
	 1.do \{ \
	\{\cf3 SinOsc\cf2 .ar\}.fillData ;\
	2.0.yield; \cf4 // add a delta to 1.0\cf2 \
	~praatArray.size.postln;		\
	\}\
\}.play ;\
\
\
)\
\
\
(\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5760\tx7200\ql\qnatural
\cf2 c = \cf3 Buffer\cf2 .read(s, \cf5 "sounds/a11wlk01-44_1.aiff"\cf2 ); \cf4 // remember to free the buffer later.\cf2 \
\cf4 // the freq array\cf2 \
h = \cf3 Array\cf2 .series(10, 21).midicps ; 		\cf4 // frequencies array\cf2 \
~matrix = \cf3 Array\cf2 .fill(h.size,\{\cf3 Array\cf2 .new\}) ; 	\cf4 // available arrays to be filled\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 )\
\
(\
\
\cf3 var\cf2  duration =  c.numFrames/44100 ;\
\cf3 var\cf2  delta = 0.5 ; \
\cf3 var\cf2  step = 0.1 ;\
\
\cf0 if (s.serverRunning.not, \{s.boot\});\
\cf2 \
\cf3 Routine\cf2  \{ \cf3 arg\cf2  inval;\
	\cf3 var\cf2  arr = [], sampleStep = (step*44100).asInteger ;\
	~praatArray = [];\
	 h.do (\{ \cf3 arg\cf2  item, index ;\
	 	(\cf5 "collecting pitch"\cf2 +item+\cf5 "(no.)"\cf2 +index).postln ; \
		\{\cf3 BPF\cf2 .ar(\
			\cf3 PlayBuf\cf2 .ar(1, c.bufnum, \cf3 BufRateScale\cf2 .kr(c.bufnum)),\
			 freq: item, rq: 0.01)/h.size\}.fillData(duration) ;\
	(duration+delta).yield; \cf4 // add a delta to d\cf2 \
	~praatArray = ~praatArray.abs.clump(step) ;\
	~praatArray.do(\{\cf3 arg\cf2  item ; arr = arr.add(item.sum/item.size)\});\
	~matrix[index] = ~matrix[index].addAll(arr);	\
	\}) ;\
\}.play ;\
\
\
)\
\
}