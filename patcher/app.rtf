{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red191\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red0\green115\blue0;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 \
\
\cf3 ////////\cf2 \
\pard\pardeftab560\li1120\fi-1120\ql\qnatural
\cf2 (\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 \
s.boot ;\
\pard\pardeftab560\li1120\fi-1120\ql\qnatural
\cf2 )\
(\
r = \cf4 SynthDef\cf2 (\cf5 "Ruz"\cf2 , \{ \cf4 arg\cf2  out, freq, trig, mul ;\
	\cf4 Out\cf2 .ar(out, mul*\cf4 EnvGen\cf2 .kr(\cf4 Env\cf2 .perc, trig, doneAction:0)*\cf4 Pulse\cf2 .ar(freq))\
	\}) ;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 \
\cf3 // Varying envelopes with quasi-integer ratio\cf2 \
g = \cf4 SynthDef\cf2 (\cf5 "Rong"\cf2 , \{ \cf4 arg\cf2  out, freq, trig, mul ;\
	\cf4 Out\cf2 .ar(out, \
	mul*\cf4 EnvGen\cf2 .kr(\cf4 Env\cf2 .perc, trig)*\
	\cf4 Mix\cf2 .new( \cf4 Array\cf2 .fill(50, \
	\{ \cf4 arg\cf2  k ;\
	\cf4 var\cf2  incr = 1 ; \cf3 // quasi-integer. Try to increase to 2...5..10 etc \cf2 \
	\cf4 var\cf2  env ;\
	i = k+1 ; \
	env = \{ \cf4 LFNoise1\cf2 .ar(\cf4 LFNoise0\cf2 .ar(10, add:1.75, mul:0.75), add:0.5, mul:0.5) \};\
	\cf4 SinOsc\cf2 .ar(freq*i\
		+(i*incr).rand, \
		mul: 0.02/i.asFloat.rand)*env \})\
	)\
	\
	)\} \
) ;\
\
\pard\pardeftab560\li1120\fi-1120\ql\qnatural
\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 \
\
\
p = \cf4 Patcher\cf2 .new ;\
\pard\pardeftab560\li1120\fi-1120\ql\qnatural
\cf2 \
p.addDef(r) ;p.addDef(g) ;\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 [\cf4 SinOsc\cf2 , \cf4 LFPulse\cf2 , \cf4 Latch\cf2 , \cf4 LFNoise0\cf2 , \cf4 Dust\cf2 , \cf4 LPF\cf2 ].do(\{ \cf4 |i, k|\cf2  d = \cf4 Wrapper\cf2 (i, \cf6 \\k\cf2 , k) ; \
	p.addDef(d);\
\}) ;\
\pard\pardeftab560\li1120\fi-1120\ql\qnatural
\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 [\cf4 Pulse\cf2 , \cf4 SinOsc\cf2 , \cf4 SoundIn\cf2 , \cf4 Saw\cf2 , \cf4 K2A\cf2 ].do(\{ \cf4 |i, k|\cf2  d = \cf4 Wrapper\cf2 (i, \cf6 \\a\cf2 , k) ; \
	p.addDef(d);\
\}) ;\
\pard\pardeftab560\li1120\fi-1120\ql\qnatural
\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 //o = PatcherGui.new(p).makeGui(\\SinOsc_0).makeGui(\\LFPulse_1).makeGui(\\Pulse_0).makeGui(\\SoundIn_1)\cf2 \
\
o = \cf4 PatcherGui\cf2 (p).makeAllGui(16) ;\
\
\
\cf3 //SynthDef("lpf", \{arg out, in ; Out.ar(out, LPF.ar(In.ar(in)) ) \}).playGUI\cf2 \
\
)\
\
\cf3 ////////\cf2 \
\
(\
\
f = \{\
	\cf4 inf\cf2 .do\{\
		~synth.set(\cf6 \\trig\cf2 , 1.0) ;\
		0.1.wait.postln ;\
		~synth.set(\cf6 \\trig\cf2 , 0.0) ;\
		(~k-0.1).postln.wait ;\
	\}\
\} ;\
\
\
\
g = \{\
	\cf4 inf\cf2 .do\{\
\cf0 		~synth.set(\cf7 \\trig\cf0 , 1.0) ;\
		0.1.wait.postln ;\
		~synth.set(\cf7 \\trig\cf0 , 0.0) ;\
		(~t-0.1).postln.wait ;\
\cf2 	\}\
\} ;\
\
\
t = \cf4 Tasker\cf2 (p) ;\
t.addTask(\cf5 "gesbereus"\cf2 , f, [\cf6 \\k\cf2 , 1, \cf6 \\synth\cf2 , 0]) ;\
\
\
t.addTask(\cf5 "muio"\cf2 , g, [\cf6 \\t\cf2 , 2, \cf7 \\synth\cf0 , 0\cf2 ]) ;\
\
\
t.taskDict ;\
\
\
h = \cf4 TaskerGui\cf2 (t) ;\
h.makeGui(\cf6 \\gesbereus\cf2 ) ;\
h.makeGui(\cf6 \\muio\cf2 )\
\
\
)}