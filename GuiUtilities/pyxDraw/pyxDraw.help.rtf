{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red96\green96\blue96;\red0\green0\blue191;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 pyxDraw			generating vectorial graphics on pdf using PyX \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs24 \cf0 .pyxDraw(fileName, yRange, xRange, curve, point, bar, barLine, width, height)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
\
The PyX package allows Python language to natively generate 2D (in the future: 3D) vectorial graphics. \
PyX uses TeX/LaTeX for text handling. \
The pyxDraw method generates a text files with .py extension containing python code (using PyX classes and mtehods). Once rendered, it outputs a vectorial graph of the data in a pdf file. \
\
The .pyxDraw method is modelled after plot/jplot method and is subsequently defined for: \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
Implementations of 'pyxDraw' :\
\
   ArrayedCollection-pyxDraw :  \
   Buffer-pyxDraw :     \
   Env-pyxDraw :     \
   Function-pyxDraw :    \
   SoundFile-pyxDraw :   \
   Wavetable-pyxDraw :   \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 fileName
\f1\b0  - the path for the .py file. The pdf file will be have the same name but with pdf extension\

\f0\b yRange
\f1\b0  - an array containg y range. Default normalizes between max/min\

\f0\b xRange
\f1\b0  - an array containg x range. Default is array.size\

\f0\b curve
\f1\b0  - boolean, if true plot a continuous between adjacent values. Default: true\

\f0\b point
\f1\b0  - boolean, if true plot a circle marking each value. Default: false\

\f0\b bar
\f1\b0  - boolean, if true plot a bar for each value starting from the x axis. Default: false\

\f0\b barLine
\f1\b0  - boolean, if true surround each bar with a white line (for better isolation). Default: true\

\f0\b width
\f1\b0  - width in cm of the resulting figure. Default: 8\

\f0\b height
\f1\b0  - height in cm of the resulting figure. Default: 5 (not 4/3, not 16/9...)\
\

\f0\b \
Rendering the .py file
\f1\b0 \
\
In order to render the .py you need to have:\
\
1. Python (http://www.python.org/, pre-installed on macosx)\
2. PyX (http://pyx.sourceforge.net/). Note that you do not have to install it. See PyX INSTALL file\
3. a TeX/LaTex installation (probably pre-installed on macosx)\
\
You do not need to know anything about them apart from installation.\
If Python is in the path you have to type from terminal:\
\
>> python myFile.py\
\
In negative case a typical place could be:\
>> usr/local/bin/python \
\

\f0\b Examples\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0\fs18 \cf2 // path of the python file to be rendered via PyX\cf0 \
p = \cf3 "/Users/apple/Desktop/testPyX.py"\cf0 ; \
\cf2 // resulting pdf after rendering would be "/Users/apple/Desktop/testPyX.pdf"\cf0 \
\
\cf2 // without the "/" path is relative to your SC install folder  \cf0 \
p = \cf3 "PyX/testPyX.py"\cf0 ; \cf2 \
// resulting pdf after rendering would be "/yourSCAppInst/PyX/testPyX.pdf"\cf0 \
\
\
\cf2 // Just like plot/jplot, but *without* numChannels arg (--> only 1 chan)\cf0 \
\
\cf2 /*1*/\cf0 \
[1,4,5,3,5,4,7].pyxDraw(p, point:\cf4 true\cf0 , curve:\cf4 false\cf0 );\
\
\cf2 /*2*/\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf4 Signal\cf0 .sineFill(100, [1]).pyxDraw(p, point:\cf4 true\cf0 , curve:\cf4 false\cf0 , bar:\cf4 true\cf0 );\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 /*3*/\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf4 Array\cf0 .fill(1000, \{rrand(-1.0, 1.0)\}).pyxDraw(p, bar:\cf4 true\cf0 , point:\cf4 true\cf0 , curve:\cf4 false\cf0 , xRange: [103, 287] );\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 /*4*/\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf4 Env\cf0 .new([0,1, 0.3, 0.8, 0], [2, 3, 1, 4],\cf5 'linear'\cf0 ).pyxDraw(p, bar:\cf4 true\cf0 , curve: \cf4 true\cf0 , point:\cf4 true\cf0 , width:10, height:5, size: 100); \cf2 //default size: 400\cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 /*5*/\cf0 \
\{\cf4 SinOsc\cf0 .ar\}.pyxDraw(p) ; \cf2 // using defaults\cf0 \
\cf2 /*6*/\cf0 \
\{\cf4 SinOsc\cf0 .ar\}.pyxDraw(p, yRange:[-0.3, 0.7], duration: 0.02) ;\
\cf2 /*7*/\cf0 \
\{\cf4 SinOsc\cf0 .ar\}.pyxDraw(p, point:\cf4 true\cf0 , curve:\cf4 false\cf0 ) ;\
\
\
\cf2 /*8*/\cf0 \
\cf2 // results in a 3.1 Mb py file and 898 Kb pdf. \cf0 \
\cf2 // can require long time rendering (and reading)\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1700\fi-1700\ql\qnatural
\cf4 Buffer\cf0 .read(s, \cf3 "sounds/a11wlk01-44_1.aiff"\cf0 ).pyxDraw(p, yRange:[-1,1]);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 /*9*/\cf0 \
f = \cf4 SoundFile\cf0 .new ;\
f.openRead(\cf3 "sounds/a11wlk01-44_1.aiff"\cf0 ); \cf2 // you have to call it\cf0 \
\
\cf2 // barLines have thickness, many of them would cover the barColor, so we put barLine: false\cf0 \
f.pyxDraw(p, yRange:[-1,1], xRange:[0,1000], curve:\cf4 false\cf0 , point:\cf4 true\cf0 , bar:\cf4 true\cf0 , barLine:\cf4 false\cf0 );\
\
f.close;\
)
\f1\fs24 \
\
\
Jan 2007\
\
-a- }